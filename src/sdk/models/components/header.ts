/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Accepts a string value.
 */
export enum HeaderAction {
    Set = "set",
    Append = "append",
    Delete = "delete",
    Regex = "regex",
    RegexRepeat = "regex_repeat",
}

/**
 * Accepts a string value.
 */
export enum HeaderType {
    Request = "request",
    Cache = "cache",
    Response = "response",
}

export class Header extends SpeakeasyBase {
    /**
     * Accepts a string value.
     */
    @SpeakeasyMetadata({ data: "form, name=action" })
    action?: HeaderAction;

    /**
     * Name of the cache condition controlling when this configuration applies.
     */
    @SpeakeasyMetadata({ data: "form, name=cache_condition" })
    cacheCondition?: string;

    /**
     * Header to set.
     */
    @SpeakeasyMetadata({ data: "form, name=dst" })
    dst?: string;

    /**
     * Don't add the header if it is added already. Only applies to 'set' action.
     */
    @SpeakeasyMetadata({ data: "form, name=ignore_if_set" })
    ignoreIfSet?: number;

    /**
     * A handle to refer to this Header object.
     */
    @SpeakeasyMetadata({ data: "form, name=name" })
    name?: string;

    /**
     * Priority determines execution order. Lower numbers execute first.
     */
    @SpeakeasyMetadata({ data: "form, name=priority" })
    priority?: number;

    /**
     * Regular expression to use. Only applies to `regex` and `regex_repeat` actions.
     */
    @SpeakeasyMetadata({ data: "form, name=regex" })
    regex?: string;

    /**
     * Condition which, if met, will select this configuration during a request. Optional.
     */
    @SpeakeasyMetadata({ data: "form, name=request_condition" })
    requestCondition?: string;

    /**
     * Optional name of a response condition to apply.
     */
    @SpeakeasyMetadata({ data: "form, name=response_condition" })
    responseCondition?: string;

    /**
     * Variable to be used as a source for the header content. Does not apply to `delete` action.
     */
    @SpeakeasyMetadata({ data: "form, name=src" })
    src?: string;

    /**
     * Value to substitute in place of regular expression. Only applies to `regex` and `regex_repeat` actions.
     */
    @SpeakeasyMetadata({ data: "form, name=substitution" })
    substitution?: string;

    /**
     * Accepts a string value.
     */
    @SpeakeasyMetadata({ data: "form, name=type" })
    type?: HeaderType;
}
