/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { objectToClass, SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Results } from "./results";
import { Expose, Transform } from "class-transformer";

export class Stats extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: Results })
    @Expose({ name: "stats" })
    @Transform(
        ({ value }) => {
            const obj: Record<string, Results> = {};
            for (const key in value) {
                obj[key] = objectToClass(value[key], Results);
            }
            return obj;
        },
        { toClassOnly: true }
    )
    stats?: Record<string, Results>;
}
