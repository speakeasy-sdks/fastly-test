/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * The type of exclusion.
 */
export enum ExclusionType {
    Rule = "rule",
    Variable = "variable",
    Waf = "waf",
}

/**
 * The variable to exclude. An optional selector can be specified after the variable separated by a colon (`:`) to restrict the variable to a particular parameter. Required for `exclusion_type=variable`.
 */
export enum Variable {
    ReqCookies = "req.cookies",
    ReqHeaders = "req.headers",
    ReqPost = "req.post",
    ReqPostFilename = "req.post_filename",
    ReqQs = "req.qs",
    LessThanNilGreaterThan = "<nil>",
}

export class WafExclusionResponseDataAttributes extends SpeakeasyBase {
    /**
     * A conditional expression in VCL used to determine if the condition is met.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "condition" })
    condition?: string;

    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "deleted_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    deletedAt?: Date;

    /**
     * The type of exclusion.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "exclusion_type" })
    exclusionType?: ExclusionType;

    /**
     * Whether to generate a log upon matching.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "logging" })
    logging?: boolean;

    /**
     * Name of the exclusion.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * A numeric ID identifying a WAF exclusion.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "number" })
    number?: number;

    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;

    /**
     * The variable to exclude. An optional selector can be specified after the variable separated by a colon (`:`) to restrict the variable to a particular parameter. Required for `exclusion_type=variable`.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "variable" })
    variable?: Variable;
}
