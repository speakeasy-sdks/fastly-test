/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * The codec used for compressing your logs. Valid values are `zstd`, `snappy`, and `gzip`. Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
 */
export enum LoggingS3CompressionCodec {
    Zstd = "zstd",
    Snappy = "snappy",
    Gzip = "gzip",
}

/**
 * The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver` if `format_version` is set to `1`.
 *
 * @remarks
 *
 */
export enum LoggingS3FormatVersion {
    One = 1,
    Two = 2,
}

/**
 * How the message should be formatted.
 */
export enum LoggingS3MessageType {
    Classic = "classic",
    Loggly = "loggly",
    Logplex = "logplex",
    Blank = "blank",
}

/**
 * Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed in `vcl_deliver`.
 *
 * @remarks
 *
 */
export enum LoggingS3Placement {
    None = "none",
    WafDebug = "waf_debug",
    LessThanNilGreaterThan = "<nil>",
}

export class LoggingS3 extends SpeakeasyBase {
    /**
     * The access key for your S3 account. Not required if `iam_role` is provided.
     */
    @SpeakeasyMetadata({ data: "form, name=access_key" })
    accessKey?: string;

    /**
     * The access control list (ACL) specific request header. See the AWS documentation for [Access Control List (ACL) Specific Request Headers](https://docs.aws.amazon.com/AmazonS3/latest/API/mpUploadInitiate.html#initiate-mpu-acl-specific-request-headers) for more information.
     */
    @SpeakeasyMetadata({ data: "form, name=acl" })
    acl?: string;

    /**
     * The bucket name for S3 account.
     */
    @SpeakeasyMetadata({ data: "form, name=bucket_name" })
    bucketName?: string;

    /**
     * The codec used for compressing your logs. Valid values are `zstd`, `snappy`, and `gzip`. Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
     */
    @SpeakeasyMetadata({ data: "form, name=compression_codec" })
    compressionCodec?: LoggingS3CompressionCodec;

    /**
     * The domain of the Amazon S3 endpoint.
     */
    @SpeakeasyMetadata({ data: "form, name=domain" })
    domain?: string;

    /**
     * A Fastly [log format string](https://docs.fastly.com/en/guides/custom-log-formats).
     */
    @SpeakeasyMetadata({ data: "form, name=format" })
    format?: string;

    /**
     * The version of the custom logging format used for the configured endpoint. The logging call gets placed by default in `vcl_log` if `format_version` is set to `2` and in `vcl_deliver` if `format_version` is set to `1`.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata({ data: "form, name=format_version" })
    formatVersion?: LoggingS3FormatVersion;

    /**
     * The level of gzip encoding when sending logs (default `0`, no compression). Specifying both `compression_codec` and `gzip_level` in the same API request will result in an error.
     */
    @SpeakeasyMetadata({ data: "form, name=gzip_level" })
    gzipLevel?: number;

    /**
     * The Amazon Resource Name (ARN) for the IAM role granting Fastly access to S3. Not required if `access_key` and `secret_key` are provided.
     */
    @SpeakeasyMetadata({ data: "form, name=iam_role" })
    iamRole?: string;

    /**
     * How the message should be formatted.
     */
    @SpeakeasyMetadata({ data: "form, name=message_type" })
    messageType?: LoggingS3MessageType;

    /**
     * The name for the real-time logging configuration.
     */
    @SpeakeasyMetadata({ data: "form, name=name" })
    name?: string;

    /**
     * The path to upload logs to.
     */
    @SpeakeasyMetadata({ data: "form, name=path" })
    path?: string;

    /**
     * How frequently log files are finalized so they can be available for reading (in seconds).
     */
    @SpeakeasyMetadata({ data: "form, name=period" })
    period?: number;

    /**
     * Where in the generated VCL the logging call should be placed. If not set, endpoints with `format_version` of 2 are placed in `vcl_log` and those with `format_version` of 1 are placed in `vcl_deliver`.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata({ data: "form, name=placement" })
    placement?: LoggingS3Placement;

    /**
     * A PGP public key that Fastly will use to encrypt your log files before writing them to disk.
     */
    @SpeakeasyMetadata({ data: "form, name=public_key" })
    publicKey?: string;

    /**
     * The S3 redundancy level.
     */
    @SpeakeasyMetadata({ data: "form, name=redundancy" })
    redundancy?: string;

    /**
     * The name of an existing condition in the configured endpoint, or leave blank to always execute.
     */
    @SpeakeasyMetadata({ data: "form, name=response_condition" })
    responseCondition?: string;

    /**
     * The secret key for your S3 account. Not required if `iam_role` is provided.
     */
    @SpeakeasyMetadata({ data: "form, name=secret_key" })
    secretKey?: string;

    /**
     * Set this to `AES256` or `aws:kms` to enable S3 Server Side Encryption.
     */
    @SpeakeasyMetadata({ data: "form, name=server_side_encryption" })
    serverSideEncryption?: string;

    /**
     * Optional server-side KMS Key Id. Must be set if `server_side_encryption` is set to `aws:kms` or `AES256`.
     */
    @SpeakeasyMetadata({ data: "form, name=server_side_encryption_kms_key_id" })
    serverSideEncryptionKmsKeyId?: string;
}
