/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Sets the snippet version.
 */
export enum SnippetDynamic {
    Zero = 0,
    One = 1,
}

/**
 * The location in generated VCL where the snippet should be placed.
 */
export enum SnippetType {
    Init = "init",
    Recv = "recv",
    Hash = "hash",
    Hit = "hit",
    Miss = "miss",
    Pass = "pass",
    Fetch = "fetch",
    Error = "error",
    Deliver = "deliver",
    Log = "log",
    None = "none",
}

export class Snippet extends SpeakeasyBase {
    /**
     * The VCL code that specifies exactly what the snippet does.
     */
    @SpeakeasyMetadata({ data: "form, name=content" })
    content?: string;

    /**
     * Sets the snippet version.
     */
    @SpeakeasyMetadata({ data: "form, name=dynamic" })
    dynamic?: SnippetDynamic;

    /**
     * The name for the snippet.
     */
    @SpeakeasyMetadata({ data: "form, name=name" })
    name?: string;

    /**
     * Priority determines execution order. Lower numbers execute first.
     */
    @SpeakeasyMetadata({ data: "form, name=priority" })
    priority?: string;

    /**
     * The location in generated VCL where the snippet should be placed.
     */
    @SpeakeasyMetadata({ data: "form, name=type" })
    type?: SnippetType;
}
