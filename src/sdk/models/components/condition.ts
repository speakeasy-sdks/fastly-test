/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Type of the condition. Required.
 */
export enum TypeT {
    Request = "REQUEST",
    Cache = "CACHE",
    Response = "RESPONSE",
    Prefetch = "PREFETCH",
}

export class Condition extends SpeakeasyBase {
    /**
     * A freeform descriptive note.
     */
    @SpeakeasyMetadata({ data: "form, name=comment" })
    comment?: string;

    /**
     * Name of the condition. Required.
     */
    @SpeakeasyMetadata({ data: "form, name=name" })
    name?: string;

    /**
     * A numeric string. Priority determines execution order. Lower numbers execute first.
     */
    @SpeakeasyMetadata({ data: "form, name=priority" })
    priority?: string;

    /**
     * A conditional expression in VCL used to determine if the condition is met.
     */
    @SpeakeasyMetadata({ data: "form, name=statement" })
    statement?: string;

    /**
     * Type of the condition. Required.
     */
    @SpeakeasyMetadata({ data: "form, name=type" })
    type?: TypeT;

    /**
     * A numeric string that represents the service version.
     */
    @SpeakeasyMetadata({ data: "form, name=version" })
    version?: string;
}
