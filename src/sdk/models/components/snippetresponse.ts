/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Sets the snippet version.
 */
export enum SnippetResponseDynamic {
    Zero = 0,
    One = 1,
}

/**
 * The location in generated VCL where the snippet should be placed.
 */
export enum SnippetResponseType {
    Init = "init",
    Recv = "recv",
    Hash = "hash",
    Hit = "hit",
    Miss = "miss",
    Pass = "pass",
    Fetch = "fetch",
    Error = "error",
    Deliver = "deliver",
    Log = "log",
    None = "none",
}

export class SnippetResponse extends SpeakeasyBase {
    /**
     * The VCL code that specifies exactly what the snippet does.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "content" })
    content?: string;

    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "deleted_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    deletedAt?: Date;

    /**
     * Sets the snippet version.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "dynamic" })
    dynamic?: SnippetResponseDynamic;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The name for the snippet.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * Priority determines execution order. Lower numbers execute first.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "priority" })
    priority?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "service_id" })
    serviceId?: string;

    /**
     * The location in generated VCL where the snippet should be placed.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: SnippetResponseType;

    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;

    /**
     * String representing the number identifying a version of the service.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "version" })
    version?: string;
}
