/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

export class TlsCertificateResponseAttributes extends SpeakeasyBase {
    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "deleted_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    deletedAt?: Date;

    /**
     * The hostname for which a certificate was issued.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "issued_to" })
    issuedTo?: string;

    /**
     * The certificate authority that issued the certificate.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "issuer" })
    issuer?: string;

    /**
     * Time-stamp (GMT) when the certificate will expire. Must be in the future to be used to terminate TLS traffic.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "not_after" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    notAfter?: Date;

    /**
     * Time-stamp (GMT) when the certificate will become valid. Must be in the past to be used to terminate TLS traffic.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "not_before" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    notBefore?: Date;

    /**
     * A recommendation from Fastly indicating the key associated with this certificate is in need of rotation.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "replace" })
    replace?: boolean;

    /**
     * A value assigned by the issuer that is unique to a certificate.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "serial_number" })
    serialNumber?: string;

    /**
     * The algorithm used to sign the certificate.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "signature_algorithm" })
    signatureAlgorithm?: string;

    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
