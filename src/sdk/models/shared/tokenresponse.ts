/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Space-delimited list of authorization scope.
 */
export enum TokenResponseScope {
    Global = "global",
    PurgeSelect = "purge_select",
    PurgeAll = "purge_all",
    GlobalRead = "global:read",
}

/**
 * OK
 */
export class TokenResponse extends SpeakeasyBase {
    /**
     * Time-stamp (UTC) of when the token was created.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    createdAt?: string;

    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "deleted_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    deletedAt?: Date;

    /**
     * Time-stamp (UTC) of when the token will expire (optional).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "expires_at" })
    expiresAt?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * IP Address of the client that last used the token.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ip" })
    ip?: string;

    /**
     * Time-stamp (UTC) of when the token was last used.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "last_used_at" })
    lastUsedAt?: string;

    /**
     * Name of the token.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * Space-delimited list of authorization scope.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "scope" })
    scope?: TokenResponseScope;

    /**
     * List of alphanumeric strings identifying services (optional). If no services are specified, the token will have access to all services on the account.
     *
     * @remarks
     *
     */
    @SpeakeasyMetadata()
    @Expose({ name: "services" })
    services?: string[];

    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;

    /**
     * User-Agent header of the client that last used the token.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "user_agent" })
    userAgent?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "user_id" })
    userId?: string;
}
