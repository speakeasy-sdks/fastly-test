/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * Allows you to terminate request handling and immediately perform an action.
 */
export enum RequestSettingsAction {
    Lookup = "lookup",
    Pass = "pass",
}

/**
 * Short for X-Forwarded-For.
 */
export enum RequestSettingsXff {
    Clear = "clear",
    Leave = "leave",
    Append = "append",
    AppendAll = "append_all",
    Overwrite = "overwrite",
}

export class RequestSettings extends SpeakeasyBase {
    /**
     * Allows you to terminate request handling and immediately perform an action.
     */
    @SpeakeasyMetadata({ data: "form, name=action" })
    action?: RequestSettingsAction;

    /**
     * Disable collapsed forwarding, so you don't wait for other objects to origin.
     */
    @SpeakeasyMetadata({ data: "form, name=bypass_busy_wait" })
    bypassBusyWait?: number;

    /**
     * Sets the host header.
     */
    @SpeakeasyMetadata({ data: "form, name=default_host" })
    defaultHost?: string;

    /**
     * Allows you to force a cache miss for the request. Replaces the item in the cache if the content is cacheable.
     */
    @SpeakeasyMetadata({ data: "form, name=force_miss" })
    forceMiss?: number;

    /**
     * Forces the request use SSL (redirects a non-SSL to SSL).
     */
    @SpeakeasyMetadata({ data: "form, name=force_ssl" })
    forceSsl?: number;

    /**
     * Injects Fastly-Geo-Country, Fastly-Geo-City, and Fastly-Geo-Region into the request headers.
     */
    @SpeakeasyMetadata({ data: "form, name=geo_headers" })
    geoHeaders?: number;

    /**
     * Comma separated list of varnish request object fields that should be in the hash key.
     */
    @SpeakeasyMetadata({ data: "form, name=hash_keys" })
    hashKeys?: string;

    /**
     * How old an object is allowed to be to serve stale-if-error or stale-while-revalidate.
     */
    @SpeakeasyMetadata({ data: "form, name=max_stale_age" })
    maxStaleAge?: number;

    /**
     * Name for the request settings.
     */
    @SpeakeasyMetadata({ data: "form, name=name" })
    name?: string;

    /**
     * Condition which, if met, will select this configuration during a request. Optional.
     */
    @SpeakeasyMetadata({ data: "form, name=request_condition" })
    requestCondition?: string;

    /**
     * Injects the X-Timer info into the request for viewing origin fetch durations.
     */
    @SpeakeasyMetadata({ data: "form, name=timer_support" })
    timerSupport?: number;

    /**
     * Short for X-Forwarded-For.
     */
    @SpeakeasyMetadata({ data: "form, name=xff" })
    xff?: RequestSettingsXff;
}
