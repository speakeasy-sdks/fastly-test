/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RelationshipMemberService } from "./relationshipmemberservice";
import { Timestamps } from "./timestamps";
import { TypeServiceAuthorization } from "./typeserviceauthorization";
import { TypeUser } from "./typeuser";
import { Expose, Type } from "class-transformer";

export class ServiceAuthorizationResponseDataRelationshipsUserData extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * Resource type
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: TypeUser;
}

/**
 * The ID of the user being given access to the service.
 */
export class ServiceAuthorizationResponseDataRelationshipsUser extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "data" })
    @Type(() => ServiceAuthorizationResponseDataRelationshipsUserData)
    data?: ServiceAuthorizationResponseDataRelationshipsUserData;
}

export class ServiceAuthorizationResponseDataRelationships extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "service" })
    @Type(() => RelationshipMemberService)
    service?: RelationshipMemberService;

    /**
     * The ID of the user being given access to the service.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => ServiceAuthorizationResponseDataRelationshipsUser)
    user?: ServiceAuthorizationResponseDataRelationshipsUser;
}

export class ServiceAuthorizationResponseData extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "attributes" })
    @Type(() => Timestamps)
    attributes?: Timestamps;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "relationships" })
    @Type(() => ServiceAuthorizationResponseDataRelationships)
    relationships?: ServiceAuthorizationResponseDataRelationships;

    /**
     * Resource type
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: TypeServiceAuthorization;
}
