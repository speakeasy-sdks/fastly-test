/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform } from "class-transformer";

/**
 * Customer's current network revenue type.
 */
export enum CustomerResponseBillingNetworkType {
    Public = "public",
    Private = "private",
}

/**
 * OK
 */
export class CustomerResponse extends SpeakeasyBase {
    /**
     * The alphanumeric string representing the primary billing contact.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "billing_contact_id" })
    billingContactId?: string;

    /**
     * Customer's current network revenue type.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "billing_network_type" })
    billingNetworkType?: CustomerResponseBillingNetworkType;

    /**
     * Used for adding purchased orders to customer's account.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "billing_ref" })
    billingRef?: string;

    /**
     * Whether this customer can view or edit wordpress.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "can_configure_wordpress" })
    canConfigureWordpress?: boolean;

    /**
     * Whether this customer can reset passwords.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "can_reset_passwords" })
    canResetPasswords?: boolean;

    /**
     * Whether this customer can upload VCL.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "can_upload_vcl" })
    canUploadVcl?: boolean;

    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "deleted_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    deletedAt?: Date;

    /**
     * Specifies whether 2FA is forced or not forced on the customer account. Logs out non-2FA users once 2FA is force enabled.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "force_2fa" })
    force2fa?: boolean;

    /**
     * Specifies whether SSO is forced or not forced on the customer account.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "force_sso" })
    forceSso?: boolean;

    /**
     * Specifies whether the account has access or does not have access to the account panel.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "has_account_panel" })
    hasAccountPanel?: boolean;

    /**
     * Specifies whether the account has access or does not have access to the improved events.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "has_improved_events" })
    hasImprovedEvents?: boolean;

    /**
     * Whether this customer can view or edit the SSL config.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "has_improved_ssl_config" })
    hasImprovedSslConfig?: boolean;

    /**
     * Specifies whether the account has enabled or not enabled openstack logging.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "has_openstack_logging" })
    hasOpenstackLogging?: boolean;

    /**
     * Specifies whether the account can edit PCI for a service.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "has_pci" })
    hasPci?: boolean;

    /**
     * Specifies whether PCI passwords are required for the account.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "has_pci_passwords" })
    hasPciPasswords?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The range of IP addresses authorized to access the customer account.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ip_whitelist" })
    ipWhitelist?: string;

    /**
     * The alphanumeric string identifying the account's legal contact.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "legal_contact_id" })
    legalContactId?: string;

    /**
     * The name of the customer, generally the company name.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * The alphanumeric string identifying the account owner.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "owner_id" })
    ownerId?: string;

    /**
     * The phone number associated with the account.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "phone_number" })
    phoneNumber?: string;

    /**
     * The postal address associated with the account.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "postal_address" })
    postalAddress?: string;

    /**
     * The pricing plan this customer is under.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "pricing_plan" })
    pricingPlan?: string;

    /**
     * The alphanumeric string identifying the pricing plan.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "pricing_plan_id" })
    pricingPlanId?: string;

    /**
     * The alphanumeric string identifying the account's security contact.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "security_contact_id" })
    securityContactId?: string;

    /**
     * The alphanumeric string identifying the account's technical contact.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "technical_contact_id" })
    technicalContactId?: string;

    /**
     * Date and time in ISO 8601 format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "updated_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    updatedAt?: Date;
}
