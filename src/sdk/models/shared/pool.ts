/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";

/**
 * What type of load balance group to use.
 */
export enum PoolType {
    Random = "random",
    Hash = "hash",
    Client = "client",
}

/**
 * Whether to use TLS.
 */
export enum UseTls {
    Zero = 0,
    One = 1,
}

export class Pool extends SpeakeasyBase {
    /**
     * A freeform descriptive note.
     */
    @SpeakeasyMetadata({ data: "form, name=comment" })
    comment?: string;

    /**
     * How long to wait for a timeout in milliseconds. Optional.
     */
    @SpeakeasyMetadata({ data: "form, name=connect_timeout" })
    connectTimeout?: number;

    /**
     * How long to wait for the first byte in milliseconds. Optional.
     */
    @SpeakeasyMetadata({ data: "form, name=first_byte_timeout" })
    firstByteTimeout?: number;

    /**
     * Name of the healthcheck to use with this pool. Can be empty and could be reused across multiple backend and pools.
     */
    @SpeakeasyMetadata({ data: "form, name=healthcheck" })
    healthcheck?: string;

    /**
     * Maximum number of connections. Optional.
     */
    @SpeakeasyMetadata({ data: "form, name=max_conn_default" })
    maxConnDefault?: number;

    /**
     * Maximum allowed TLS version on connections to this server. Optional.
     */
    @SpeakeasyMetadata({ data: "form, name=max_tls_version" })
    maxTlsVersion?: number;

    /**
     * Minimum allowed TLS version on connections to this server. Optional.
     */
    @SpeakeasyMetadata({ data: "form, name=min_tls_version" })
    minTlsVersion?: number;

    /**
     * Name for the Pool.
     */
    @SpeakeasyMetadata({ data: "form, name=name" })
    name?: string;

    /**
     * The hostname to [override the Host header](https://docs.fastly.com/en/guides/specifying-an-override-host). Defaults to `null` meaning no override of the Host header will occur. This setting can also be added to a Server definition. If the field is set on a Server definition it will override the Pool setting.
     */
    @SpeakeasyMetadata({ data: "form, name=override_host" })
    overrideHost?: string;

    /**
     * Percentage of capacity (`0-100`) that needs to be operationally available for a pool to be considered up.
     */
    @SpeakeasyMetadata({ data: "form, name=quorum" })
    quorum?: number;

    /**
     * Condition which, if met, will select this configuration during a request. Optional.
     */
    @SpeakeasyMetadata({ data: "form, name=request_condition" })
    requestCondition?: string;

    /**
     * Selected POP to serve as a shield for the servers. Defaults to `null` meaning no origin shielding if not set. Refer to the [POPs API endpoint](/reference/api/utils/pops/) to get a list of available POPs used for shielding.
     */
    @SpeakeasyMetadata({ data: "form, name=shield" })
    shield?: string;

    /**
     * A secure certificate to authenticate a server with. Must be in PEM format.
     */
    @SpeakeasyMetadata({ data: "form, name=tls_ca_cert" })
    tlsCaCert?: string;

    /**
     * The hostname used to verify a server's certificate. It can either be the Common Name (CN) or a Subject Alternative Name (SAN).
     */
    @SpeakeasyMetadata({ data: "form, name=tls_cert_hostname" })
    tlsCertHostname?: string;

    /**
     * Be strict on checking TLS certs. Optional.
     */
    @SpeakeasyMetadata({ data: "form, name=tls_check_cert" })
    tlsCheckCert?: number;

    /**
     * List of OpenSSL ciphers (see the [openssl.org manpages](https://www.openssl.org/docs/man1.1.1/man1/ciphers.html) for details). Optional.
     */
    @SpeakeasyMetadata({ data: "form, name=tls_ciphers" })
    tlsCiphers?: string;

    /**
     * The client certificate used to make authenticated requests. Must be in PEM format.
     */
    @SpeakeasyMetadata({ data: "form, name=tls_client_cert" })
    tlsClientCert?: string;

    /**
     * The client private key used to make authenticated requests. Must be in PEM format.
     */
    @SpeakeasyMetadata({ data: "form, name=tls_client_key" })
    tlsClientKey?: string;

    /**
     * SNI hostname. Optional.
     */
    @SpeakeasyMetadata({ data: "form, name=tls_sni_hostname" })
    tlsSniHostname?: string;

    /**
     * What type of load balance group to use.
     */
    @SpeakeasyMetadata({ data: "form, name=type" })
    type?: PoolType;

    /**
     * Whether to use TLS.
     */
    @SpeakeasyMetadata({ data: "form, name=use_tls" })
    useTls?: UseTls;
}
