/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { HttpResponseFormat } from "./httpresponseformat";
import { HttpStreamFormat } from "./httpstreamformat";
import { WsMessageFormat } from "./wsmessageformat";
import { Expose, Type } from "class-transformer";

/**
 * Transport-specific message payload representations to be used for delivery. At least one format (`http-response`, `http-stream`, and/or `ws-message`) must be specified. Messages are only delivered to subscribers interested in the provided formats. For example, the `ws-message` format will only be sent to WebSocket clients.
 */
export class PublishItemFormats extends SpeakeasyBase {
    /**
     * Payload format for delivering to subscribers of whole HTTP responses (`response` hold mode). One of `body` or `body-bin` must be specified.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "http-response" })
    @Type(() => HttpResponseFormat)
    httpResponse?: HttpResponseFormat;

    /**
     * Payload format for delivering to subscribers of HTTP streaming response bodies (`stream` hold mode). One of `content` or `content-bin` must be specified.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "http-stream" })
    @Type(() => HttpStreamFormat)
    httpStream?: HttpStreamFormat;

    /**
     * Payload format for delivering to subscribers of WebSocket messages. One of `content` or `content-bin` must be specified.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ws-message" })
    @Type(() => WsMessageFormat)
    wsMessage?: WsMessageFormat;
}

/**
 * An individual message.
 */
export class PublishItem extends SpeakeasyBase {
    /**
     * The channel to publish the message on.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "channel" })
    channel: string;

    /**
     * Transport-specific message payload representations to be used for delivery. At least one format (`http-response`, `http-stream`, and/or `ws-message`) must be specified. Messages are only delivered to subscribers interested in the provided formats. For example, the `ws-message` format will only be sent to WebSocket clients.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "formats" })
    @Type(() => PublishItemFormats)
    formats: PublishItemFormats;

    /**
     * The ID of the message.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The ID of the previous message published on the same channel.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "prev-id" })
    prevId?: string;
}
