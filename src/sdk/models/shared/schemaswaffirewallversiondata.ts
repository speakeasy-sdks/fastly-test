/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { TypeWafFirewallVersion } from "./typewaffirewallversion";
import { Expose, Type } from "class-transformer";

export class SchemasWafFirewallVersionDataAttributes extends SpeakeasyBase {
    /**
     * Allowed HTTP versions.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "allowed_http_versions" })
    allowedHttpVersions?: string;

    /**
     * A space-separated list of HTTP method names.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "allowed_methods" })
    allowedMethods?: string;

    /**
     * Allowed request content types.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "allowed_request_content_type" })
    allowedRequestContentType?: string;

    /**
     * Allowed request content type charset.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "allowed_request_content_type_charset" })
    allowedRequestContentTypeCharset?: string;

    /**
     * The maximum allowed length of an argument.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "arg_length" })
    argLength?: number;

    /**
     * The maximum allowed argument name length.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "arg_name_length" })
    argNameLength?: number;

    /**
     * The maximum allowed size of all files (in bytes).
     */
    @SpeakeasyMetadata()
    @Expose({ name: "combined_file_sizes" })
    combinedFileSizes?: number;

    /**
     * A freeform descriptive note.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "comment" })
    comment?: string;

    /**
     * Score value to add for critical anomalies.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "critical_anomaly_score" })
    criticalAnomalyScore?: number;

    /**
     * CRS validate UTF8 encoding.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "crs_validate_utf8_encoding" })
    crsValidateUtf8Encoding?: boolean;

    /**
     * Score value to add for error anomalies.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "error_anomaly_score" })
    errorAnomalyScore?: number;

    /**
     * A space-separated list of country codes in ISO 3166-1 (two-letter) format.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "high_risk_country_codes" })
    highRiskCountryCodes?: string;

    /**
     * HTTP violation threshold.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "http_violation_score_threshold" })
    httpViolationScoreThreshold?: number;

    /**
     * Inbound anomaly threshold.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "inbound_anomaly_score_threshold" })
    inboundAnomalyScoreThreshold?: number;

    /**
     * Local file inclusion attack threshold.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "lfi_score_threshold" })
    lfiScoreThreshold?: number;

    /**
     * Whether a specific firewall version is locked from being modified.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "locked" })
    locked?: boolean;

    /**
     * The maximum allowed file size, in bytes.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "max_file_size" })
    maxFileSize?: number;

    /**
     * The maximum number of arguments allowed.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "max_num_args" })
    maxNumArgs?: number;

    /**
     * Score value to add for notice anomalies.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "notice_anomaly_score" })
    noticeAnomalyScore?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "number" })
    number?: number;

    /**
     * The configured paranoia level.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "paranoia_level" })
    paranoiaLevel?: number;

    /**
     * PHP injection threshold.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "php_injection_score_threshold" })
    phpInjectionScoreThreshold?: number;

    /**
     * Remote code execution threshold.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "rce_score_threshold" })
    rceScoreThreshold?: number;

    /**
     * A space-separated list of allowed file extensions.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "restricted_extensions" })
    restrictedExtensions?: string;

    /**
     * A space-separated list of allowed header names.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "restricted_headers" })
    restrictedHeaders?: string;

    /**
     * Remote file inclusion attack threshold.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "rfi_score_threshold" })
    rfiScoreThreshold?: number;

    /**
     * Session fixation attack threshold.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "session_fixation_score_threshold" })
    sessionFixationScoreThreshold?: number;

    /**
     * SQL injection attack threshold.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "sql_injection_score_threshold" })
    sqlInjectionScoreThreshold?: number;

    /**
     * The maximum size of argument names and values.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "total_arg_length" })
    totalArgLength?: number;

    /**
     * Score value to add for warning anomalies.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "warning_anomaly_score" })
    warningAnomalyScore?: number;

    /**
     * XSS attack threshold.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "xss_score_threshold" })
    xssScoreThreshold?: number;
}

export class SchemasWafFirewallVersionData extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "attributes" })
    @Type(() => SchemasWafFirewallVersionDataAttributes)
    attributes?: SchemasWafFirewallVersionDataAttributes;

    /**
     * Resource type.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: TypeWafFirewallVersion;
}
