/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * Whether to negate the match. Useful primarily when creating individual exceptions to larger subnets.
 */
export enum BulkUpdateAclEntryNegated {
    Zero = 0,
    One = 1,
}

export enum Op {
    Create = "create",
    Update = "update",
    Delete = "delete",
}

export class BulkUpdateAclEntry extends SpeakeasyBase {
    /**
     * A freeform descriptive note.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "comment" })
    comment?: string;

    /**
     * An IP address.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "ip" })
    ip?: string;

    /**
     * Whether to negate the match. Useful primarily when creating individual exceptions to larger subnets.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "negated" })
    negated?: BulkUpdateAclEntryNegated;

    @SpeakeasyMetadata()
    @Expose({ name: "op" })
    op?: Op;

    /**
     * Number of bits for the subnet mask applied to the IP address. For IPv4 addresses, a value of 32 represents the smallest subnet mask (1 address), 24 represents a class C subnet mask (256 addresses), 16 represents a class B subnet mask (65k addresses), and 8 is class A subnet mask (16m addresses). If not provided, no mask is applied.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "subnet" })
    subnet?: number;
}
