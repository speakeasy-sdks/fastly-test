/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as components from "../../../sdk/models/components";
import { AxiosResponse } from "axios";
import { Expose, Type } from "class-transformer";

export class GetStoresRequest extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=cursor" })
    cursor?: string;

    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=limit" })
    limit?: number;
}

/**
 * Meta for the pagination.
 */
export class Meta extends SpeakeasyBase {
    /**
     * Entries returned.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "limit" })
    limit?: number;

    /**
     * Cursor for the next page.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "next_cursor" })
    nextCursor?: string;
}

/**
 * OK
 */
export class GetStoresResponseBody extends SpeakeasyBase {
    @SpeakeasyMetadata({ elemType: components.StoreResponse })
    @Expose({ name: "data" })
    @Type(() => components.StoreResponse)
    data?: components.StoreResponse[];

    /**
     * Meta for the pagination.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "meta" })
    @Type(() => Meta)
    meta?: Meta;
}

export class GetStoresResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    object?: GetStoresResponseBody;
}
